<templateSet group="Flutter">
  <template name="container" value="Container(&#10;  child: $Widget$(),&#10;)," description="Create Container Widget" toReformat="true" toShortenFQNames="true">
    <variable name="Widget" expression="&quot;Widget&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="mateApp" value="import 'package:flutter/material.dart';&#10; &#10;void main() =&gt; runApp($className$());&#10; &#10;class $className$ extends StatelessWidget {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return MaterialApp(&#10;      title: 'Material App',&#10;      home: Scaffold(&#10;        appBar: AppBar(&#10;          title: Text('Material App Bar'),&#10;        ),&#10;        body: Center(&#10;          child: Container(&#10;            child: Text('Hello World'),&#10;          ),&#10;        ),&#10;      ),&#10;    );&#10;  }&#10;}" description="Create a New Material App" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="&quot;MyApp&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="toStr" value="@override&#10;String toString() {&#10;return $toString$;&#10;}&#10;" description="To String Override" toReformat="true" toShortenFQNames="true">
    <variable name="toString" expression="$toString$" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="valueListenableBuilder" value="ValueListenableBuilder( &#10; valueListenable: $duration$, &#10; builder: (BuildContext context, $type$ value, Widget child) { &#10; return  $body$  &#10; }&#10;" description="Value Listenable Builder" toReformat="true" toShortenFQNames="true">
    <variable name="valueListenable" expression="$valueListenable$" defaultValue="null" alwaysStopAt="true" />
    <variable name="type" expression="$type$" defaultValue="dynamic" alwaysStopAt="true" />
    <variable name="body" expression="$body$" defaultValue="Container();" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>